<?php

namespace elfib\ArticleBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use elfib\ArticleBundle\Entity\Nomenclatures;

/**
 * MatierePremiere
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="elfib\ArticleBundle\Entity\MatierePremiereRepository")
 */
class MatierePremiere extends Nomenclatures
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\ManyToMany(targetEntity="elfib\CommercialBundle\Entity\Fournisseurs", cascade={"persist"})
     */
    private $fournisseurs;

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set fournisseur
     *
     * @param string $fournisseur
     * @return MatierePremiere
     */
    public function setFournisseur($fournisseur)
    {
        $this->fournisseur = $fournisseur;
    
        return $this;
    }

    /**
     * Get fournisseur
     *
     * @return string 
     */
    public function getFournisseur()
    {
        return $this->fournisseur;
    }
    
    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $emplacements;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $mouvements;


    /**
     * Add fournisseurs
     *
     * @param \elfib\CommercialBundle\Entity\Fournisseurs $fournisseurs
     * @return MatierePremiere
     */
    public function addFournisseur(\elfib\CommercialBundle\Entity\Fournisseurs $fournisseurs)
    {
        $this->fournisseurs[] = $fournisseurs;
    
        return $this;
    }

    /**
     * Remove fournisseurs
     *
     * @param \elfib\CommercialBundle\Entity\Fournisseurs $fournisseurs
     */
    public function removeFournisseur(\elfib\CommercialBundle\Entity\Fournisseurs $fournisseurs)
    {
        $this->fournisseurs->removeElement($fournisseurs);
    }

    /**
     * Get fournisseurs
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getFournisseurs()
    {
        return $this->fournisseurs;
    }

    /**
     * Add ProduitFini
     *
     * @param \elfib\ArticleBundle\Entity\ProduitFini $produitFini
     * @return MatierePremiere
     */
    public function addProduitFini(\elfib\ArticleBundle\Entity\ProduitFini $produitFini)
    {
        $this->ProduitFini[] = $produitFini;
    
        return $this;
    }

    /**
     * Remove ProduitFini
     *
     * @param \elfib\ArticleBundle\Entity\ProduitFini $produitFini
     */
    public function removeProduitFini(\elfib\ArticleBundle\Entity\ProduitFini $produitFini)
    {
        $this->ProduitFini->removeElement($produitFini);
    }

    /**
     * Get ProduitFini
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getProduitFini()
    {
        return $this->ProduitFini;
    }

    /**
     * Add emplacements
     *
     * @param \elfib\StockBundle\Entity\Emplacements $emplacements
     * @return MatierePremiere
     */
    public function addEmplacement(\elfib\StockBundle\Entity\Emplacements $emplacements)
    {
        $this->emplacements[] = $emplacements;
    
        return $this;
    }

    /**
     * Remove emplacements
     *
     * @param \elfib\StockBundle\Entity\Emplacements $emplacements
     */
    public function removeEmplacement(\elfib\StockBundle\Entity\Emplacements $emplacements)
    {
        $this->emplacements->removeElement($emplacements);
    }

    /**
     * Get emplacements
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getEmplacements()
    {
        return $this->emplacements;
    }

    /**
     * Add mouvements
     *
     * @param \elfib\StockBundle\Entity\Emplacements $mouvements
     * @return MatierePremiere
     */
    public function addMouvement(\elfib\StockBundle\Entity\Emplacements $mouvements)
    {
        $this->mouvements[] = $mouvements;
    
        return $this;
    }

    /**
     * Remove mouvements
     *
     * @param \elfib\StockBundle\Entity\Emplacements $mouvements
     */
    public function removeMouvement(\elfib\StockBundle\Entity\Emplacements $mouvements)
    {
        $this->mouvements->removeElement($mouvements);
    }

    /**
     * Get mouvements
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getMouvements()
    {
        return $this->mouvements;
    }
}